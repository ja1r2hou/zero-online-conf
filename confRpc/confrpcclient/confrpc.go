// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: confRpc.proto

package confrpcclient

import (
	"context"

	"zero-online-conf/confRpc/confRpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = confRpc.Request
	Response = confRpc.Response

	ConfRpc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultConfRpc struct {
		cli zrpc.Client
	}
)

func NewConfRpc(cli zrpc.Client) ConfRpc {
	return &defaultConfRpc{
		cli: cli,
	}
}

func (m *defaultConfRpc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := confRpc.NewConfRpcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
